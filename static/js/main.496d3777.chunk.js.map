{"version":3,"sources":["recoil/atoms.ts","components/Sidebar.tsx","components/ComponentToImg.jsx","components/CoverImg.tsx","components/Preview.tsx","components/App.tsx","index.tsx","assets/logo.svg"],"names":["coverSettingsState","atom","key","default","Container","styled","div","Sidebar","useRecoilState","coverSettings","setCoverSettings","handleChange","e","value","target","id","src","logo","height","alt","Box","mb","mt","Typography","variant","component","TextField","fullWidth","label","multiline","text","onChange","type","textSize","textColor","borderSize","borderColor","imgWidth","imgHeight","ComponentToImg","children","componentRef","useRef","ref","ButtonGroup","disableElevation","color","Button","onClick","exportComponentAsJPEG","exportComponentAsPDF","exportComponentAsPNG","props","backgroundColor","CoverImg","Preview","useRecoilValue","GlobalStyles","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.496d3777.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const coverSettingsState = atom({\r\n  key: \"coverSettingsState\",\r\n  default: {\r\n    \"backgroundColor\":\"#3689e6\",\r\n    \"borderColor\":\"#8cd5ff\",\r\n    \"borderSize\":5,\r\n    \"imgHeight\":480,\r\n    \"imgWidth\":720,\r\n    \"text\":\"Your text here\",\r\n    \"textColor\":\"#fafafa\",\r\n    \"textSize\":25\r\n  }\r\n});","import * as React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { coverSettingsState } from \"../recoil/atoms\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport styled from \"styled-components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  border-right: 1px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  padding: 0 3rem;\r\n  > div {\r\n    margin-top: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const Sidebar: React.FC = () => {\r\n  const [coverSettings, setCoverSettings] = useRecoilState(coverSettingsState);\r\n  const handleChange = (e: any) => {\r\n    const value = e.target.value;\r\n    setCoverSettings({\r\n      ...coverSettings,\r\n      [e.target.id]: value,\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <img src={logo} height=\"150\" alt=\"logo\" />\r\n      <Box mb={3} mt={1}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          CoverMaker\r\n        </Typography>\r\n      </Box>\r\n      <TextField\r\n        fullWidth\r\n        id=\"text\"\r\n        label=\"Text\"\r\n        multiline\r\n        value={coverSettings.text}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"textSize\"\r\n        label=\"Text Size\"\r\n        type=\"number\"\r\n        value={coverSettings.textSize}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"textColor\"\r\n        label=\"Text Color\"\r\n        value={coverSettings.textColor}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"borderSize\"\r\n        label=\"Border Size\"\r\n        type=\"number\"\r\n        value={coverSettings.borderSize}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"borderColor\"\r\n        label=\"Border Color\"\r\n        value={coverSettings.borderColor}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"imgWidth\"\r\n        label=\"Image Width\"\r\n        type=\"number\"\r\n        value={coverSettings.imgWidth}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        id=\"imgHeight\"\r\n        label=\"Image Height\"\r\n        type=\"number\"\r\n        value={coverSettings.imgHeight}\r\n        onChange={handleChange}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  exportComponentAsJPEG,\r\n  exportComponentAsPDF,\r\n  exportComponentAsPNG,\r\n} from \"react-component-export-image\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ComponentToImg = ({ children }) => {\r\n  const componentRef = useRef();\r\n  return (\r\n    <Container>\r\n      <div ref={componentRef}>{children}</div>\r\n      <Box mt={3}>\r\n        <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n          <Button onClick={() => exportComponentAsJPEG(componentRef)}>\r\n            JPG\r\n          </Button>\r\n          <Button onClick={() => exportComponentAsPDF(componentRef)}>\r\n            PDF\r\n          </Button>\r\n          <Button onClick={() => exportComponentAsPNG(componentRef)}>\r\n            PNG\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype CoverImgProps = {\r\n  backgroundColor: string;\r\n  borderColor: string;\r\n  borderSize: number;\r\n  imgHeight: number;\r\n  imgWidth: number;\r\n  text: string;\r\n  textColor: string;\r\n  textSize: number;\r\n};\r\n\r\nconst Container = styled.div<CoverImgProps>`\r\n  align-items: center;\r\n  background: ${(props) => props.backgroundColor};\r\n  border: ${(props) => props.borderSize}px solid ${(props) => props.borderColor};\r\n  color: ${(props) => props.textColor};\r\n  display: flex;\r\n  font-size: ${(props) => props.textSize}px;\r\n  height: ${(props) => props.imgHeight}px;\r\n  justify-content: center;\r\n  line-height: 3em;\r\n  padding: 3rem;\r\n  text-align: center;\r\n  width: ${(props) => props.imgWidth}px;\r\n`;\r\n\r\nexport const CoverImg: React.FC<CoverImgProps> = (props) => (\r\n  <Container {...props}>\r\n    <h2>{props.text}</h2>\r\n  </Container>\r\n);\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nimport { ComponentToImg } from \"./ComponentToImg.jsx\";\r\nimport { CoverImg } from \"./CoverImg\";\r\nimport { coverSettingsState } from \"../recoil/atoms\";\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 3.5;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Preview: React.FC = () => {\r\n  const coverSettings = useRecoilValue(coverSettingsState);\r\n  return (\r\n    <Container>\r\n      <ComponentToImg>\r\n        <CoverImg\r\n          backgroundColor={coverSettings.backgroundColor}\r\n          borderColor={coverSettings.borderColor}\r\n          borderSize={coverSettings.borderSize}\r\n          imgHeight={coverSettings.imgHeight}\r\n          imgWidth={coverSettings.imgWidth}\r\n          text={coverSettings.text}\r\n          textColor={coverSettings.textColor}\r\n          textSize={coverSettings.textSize}\r\n        />\r\n      </ComponentToImg>\r\n    </Container>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { Preview } from \"./Preview\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  *, *:before, *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: Open-Sans, Helvetica, Sans-Serif;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const App: React.FC = () => (\r\n  <RecoilRoot>\r\n    <Container>\r\n      <GlobalStyles />\r\n      <Sidebar />\r\n      <Preview />\r\n    </Container>\r\n  </RecoilRoot>\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.04f1f264.svg\";"],"sourceRoot":""}